<?php


namespace Profit\Nordea\API;


use Phpro\SoapClient\Client;
use Phpro\SoapClient\Type\RequestInterface;
use Profit\Nordea\API\SoapTypes\DownloadFileListRequest;
use Profit\Nordea\API\SoapTypes\DownloadFileListResponse;
use Profit\Nordea\API\SoapTypes\DownloadFileRequest;
use Profit\Nordea\API\SoapTypes\GetUserInfoRequest;
use Profit\Nordea\API\SoapTypes\UploadFileRequest;
use Profit\Nordea\API\SoapTypes\UploadFileResponse;
use SoapClient;
use Symfony\Component\EventDispatcher\EventDispatcherInterface;

class ClientSOAP extends Client implements ClientInterface
{
    public function __construct(SoapClient $soapClient, EventDispatcherInterface $dispatcher)
    {
        parent::__construct($soapClient, $dispatcher);
    }


    public function getUserInfo(GetUserInfoRequest $request)
    {
        return $this->call('GetUserInfo', $request);
    }

    public function downloadFile(DownloadFileRequest $request)
    {
        return $this->call('downloadFile', $request);
    }

    protected function call($method, RequestInterface $request)
    {
        $this->applySoapHeaders(new \SoapHeader(
            'https://filetransfer.nordea.com/services/CorporateFileService',
            'SOAPAction',
            $method
        ));

        return parent::call($method, $request); // TODO: Change the autogenerated stub
    }


    public function downloadFileList(DownloadFileListRequest $request): DownloadFileListResponse
    {
        // TODO: Implement downloadFileList() method.
    }

    public function uploadFile(UploadFileRequest $request): UploadFileResponse
    {
        // TODO: Implement uploadFile() method.
    }
}